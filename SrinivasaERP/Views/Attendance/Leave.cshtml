@{
    Layout = null;
}

@{
    var today = DateTime.Today;
    var nextMonthEnd = new DateTime(today.Year, today.Month, 1)
                        .AddMonths(2)      // move to the month after next
                        .AddDays(-1);      // subtract 1 day to get last day of next month
}


<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Attendance Dashboard</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            
            
        }

        .sidebar {
            width: 240px;
            background-color: #2d3748;
            color: white;
            height: 100vh;
            position: fixed;
            padding-top: 20px;
        }

            .sidebar a {
                display: block;
                padding: 16px;
                color: white;
                text-decoration: none;
            }

                .sidebar a.active, .sidebar a:hover {
                    background-color: #4a5568;
                }

        .main {
            margin-left: 240px;
            padding: 20px;
        }

        .header {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 20px;
        }

        .tabs {
            display: flex;
            gap: 16px;
            margin-bottom: 24px;
        }

            .tabs div {
                padding: 8px 16px;
                border-bottom: 2px solid transparent;
                cursor: pointer;
            }

            .tabs .active {
                border-color: #4a90e2;
                font-weight: bold;
            }
            
.form-container {
    width: 400px;
    margin: 80px auto;
    padding: 40px 30px;
    background: rgba(0, 0, 0, 0.8);
    color: #fff;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.6);
    display: flex;
    flex-direction: column;
    animation: fadeIn 1.2s ease-in-out;
}

/* Form fade-in animation */


h2 {
    text-align: center;
    color: #ff4f4f;
    margin-bottom: 30px;
    text-shadow: 1px 1px 5px black;
}

.form-group {
    display: flex;
    flex-direction: column;
    margin-bottom: 20px;
    width: 100%;
}

label {
    margin-bottom: 6px;
    font-weight: bold;
    font-size: 15px;
}

select,
input[type="date"] {
    padding: 10px;
    border: 1px solid #555;
    border-radius: 6px;
    font-size: 15px;
    background-color: #222;
    color: white;
    transition: 0.3s ease;
}

select:focus,
input[type="date"]:focus {
    border-color: #00ffff;
    outline: none;
    box-shadow: 0 0 5px #00ffff;
}

button {
    padding: 12px;
    
    background: linear-gradient(45deg, #00bcd4, #2196f3);
    border: none;
    color: white;
    font-size: 16px;
    border-radius: 6px;
    cursor: pointer;
    transition: background 0.4s ease;
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.3);
}

button:hover {
    background: linear-gradient(45deg, #2196f3, #00bcd4);
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.6);
}

#dateError {
    font-size: 13px;
    color: red;
    text-align: center;
}
       

  input[type="date"]::-webkit-calendar-picker-indicator {
            filter: invert(1);
            cursor: pointer;
        }

         input[type="date"]::-webkit-calendar-picker-indicator {
        filter: invert(1); /* Makes the icon white */
        cursor: pointer;
    }
     input[type="date"] {
        background-color: black;
        color: lightpink;
        border: 1px solid #777;
    }

       
    </style>
</head>
<body>
    <div class="sidebar">
        <a href="#"><i class="fas fa-home"></i> Home</a>
        <a href="#"><i class="fas fa-user"></i> Profile</a>
        <a href="#"><i class="fas fa-sitemap"></i> Hierarchy</a>
        <a href="@Url.Action("Dashboard", "Attendance")" class="active"><i class="fas fa-calendar-alt"></i> Attendance</a>
        <a href="@Url.Action("Leave", "Attendance")"><i class="fas fa-plane"></i> Leave</a>
    </div>

    <div class="main">
        <div class="header">Attendance Management</div>

        <div class="tabs">
            <div class="active">Dashboard</div>
            <div>Attendance Details</div>
            <div>My Shifts</div>
            <div>Attendance Policies</div>
            <div>Requests</div>
            <div>Apply</div>
        </div>
    </div>
   

   
        
<div class="form-container">
    <h2 style="position:center;color:red">Apply for Leave</h2>
    @using (Html.BeginForm("Leave", "Attendance", FormMethod.Post))
    {
        <div class="form-group">
            <label for="LeaveType">Leave Type: </label>
            <select id="LeaveType" name="LeaveType" required>
                <option value="">-- Select Leave Type --</option>
                <option value="Sick">Sick Leave</option>
                <option value="Casual">Casual Leave</option>
                <option value="Paid">Paid Leave</option>
            </select>
        </div>

       


        <div class="form-group">
            <label for="StartDate">Start Date:</label>
            <input type="date" id="StartDate" name="StartDate" required  min="@today.ToString("yyyy-MM-dd")"  max="@nextMonthEnd.ToString("yyyy-MM-dd")" />
        </div>

        <div class="form-group">
            <label for="EndDate">End Date:</label>
            <input type="date" id="EndDate" name="EndDate" required  min="@today.ToString("yyyy-MM-dd")" max="@nextMonthEnd.ToString("yyyy-MM-dd")"/>
        </div>

        <span id="dateError" style="color: red;"></span>

        <br />

       <div style="text-align:center">
    <button type="submit" class="btn btn-primary btn-ghost" onclick="return validateForm()">Submit</button>
    </div>


 

    }
</div>
 
  
  
    
      
      
</body>

</html>

<script>
    function validateForm() {
        const startInput = document.getElementById("StartDate").value;
        const endInput = document.getElementById("EndDate").value;
        const today = new Date();
        today.setHours(0, 0, 0, 0);

        const error = document.getElementById("dateError");

        if (!startInput || !endInput) {
            error.textContent = "Please select both start and end dates.";
            return false;
        }

        const start = new Date(startInput);
        const end = new Date(endInput);

        if (start < today) {
            error.textContent = "Start date cannot be in the past.";
            return false;
        }

        if (end < start) {
            error.textContent = "End date cannot be before start date.";
            return false;
        }

        error.textContent = "";
        return true;
    }
</script>

